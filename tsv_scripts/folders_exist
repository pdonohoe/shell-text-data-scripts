#!/bin/sh
# script name: filesexist
# Author: Paul Donohoe
# Description: Reads lines from STDIN. Treats each line as a folder path. 
# Outputs the line depending on the given options and whether the folder path exists as a folder.

command_name=$(basename "$0");
# get directory of this script
script_path=$(cd "$(dirname "$0")" || exit; pwd);
if [ "$script_path" = "" ] || [ ! -d "$script_path" ] || [ ! -e "$script_path/$command_name" ]; then echo "Variables \$command_name and \$script_path not set correctly for script $command_name"; exit 1; fi;

help_usage="
Outputs lines from STDIN depending on the given options and whether each line exists as a folder.
Syntax of $command_name:

[ LINES ] | $command_name [ -y | -n | -b ] 

OPTIONAL OPTIONS:
-?      Print this summary
-y      Output the line to STDOUT if it exists as a folder (default)
-n      Output the line to STDOUT if it does not exist as a folder
-b      Output the line to STDOUT if it exists as a folder, otherwise output the line to STDERR

";


yes=0;
no=0;
both=0;

# get options from command line
while getopts "ynbh?" getopts_option
do
  case $getopts_option in
   y ) yes=1;;
   n ) no=1;;
   b ) both=1;;
	h | \? ) echo "$help_usage"; exit 0;
  esac
done;

# validate options
if [ "$(( $yes + $no + $both ))" -gt 1 ]; then echo "$command_name: ERROR: Options -y, -n and -s are mutually exclusive.$help_usage" 1>&2 ; fi;

sed 's%\r%%g' | while IFS= read -r stdin_line; do
  if [ "$no" -eq 1 ]; then
    [ ! -d "$stdin_line" ] && echo "$stdin_line";
	else
    [ -e "$stdin_line" ] && echo "$stdin_line";
    if [ "$both" -eq 1 ]; then
      [ ! -d "$stdin_line" ] && echo "$stdin_line" 1>&2;
    fi;
	fi;
done  ;
